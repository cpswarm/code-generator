<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml"
	xmlns:cpswarm="http://my.custom-actions.domain/cpswarm/CUSTOM"
	version="1.0" initial="SarThreads" name="sar">
	
	<!-- ******************** SAR MAIN ******************** -->
	<parallel id="SarThreads">
	
		<!-- ******************** SAR BEHAVIOR ******************** -->
		<state id="SarBehavior">

<!-- 			<state id="StartUp"> -->
<!-- 				<datamodel> -->
<!-- 					<data id="invoke"><rosservice><name>cmd/startup</name><srv>StartUp</srv><request empty="true"/></rosservice> -->
<!-- 					</data> -->
<!-- 				</datamodel> -->
<!-- 				<invoke type="ROS_SERVICE" /> -->
<!-- 				<transition event="succeeded" target="Idle" /> -->
<!-- 			</state> -->
			
			<!-- ******************** IDLE ******************** -->
			<parallel id="IdleThreads">
				<state id="Idle">
				</state>
				
				<state id="IdleEventMonitoring">
					<datamodel>
						<data id="invoke"><rosmonitor><topic>bridge/events/mission_start</topic><msg>SimpleEvent</msg></rosmonitor>
						</data>
					</datamodel>
					<invoke type="ROS_MONITOR" />
				</state>
				
				<transition event="missionStart" target="TakeOff" />
			</parallel>

			<!-- ****************TAKEOFF ******************** -->
			<state id="TakeOff">
				<datamodel>
					<data id="invoke"><rosservice><name>cmd/takeoff</name><srv>TakeOff</srv><request empty="false"><param>1.5</param></request></rosservice>
					</data>
				</datamodel>
				<invoke type="ROS_SERVICE" />
				<transition event="succeeded" target="SelectRover" />
			</state>

<!-- 			<state id="TakeOff"> -->
<!-- 				<datamodel> -->
<!-- 					<data id="invoke"><rosaction><name>cmd/takeoff</name><action>TakeOff</action><goal type="object"><param>1.5</param></goal></rosaction> -->
<!-- 					</data> -->
<!-- 				</datamodel> -->
<!-- 				<invoke type="ROS_ACTION" /> -->
				
<!-- 				<transition event="succeeded" target="Coverage" /> -->
<!-- 			</state> -->
			
			<!-- ******************** COVERAGE ******************** -->
<!-- 			<state id="Coverage"> -->
<!-- 				<datamodel> -->
<!-- 					<data id="invoke"><rosaction><name>uav_coverage</name><action>Empty</action><goal type="empty"></goal></rosaction> -->
<!-- 					</data> -->
<!-- 				</datamodel> -->
<!-- 				<invoke type="ROS_ACTION" /> -->
				
<!-- 				<transition event="succeeded" target="SelectRover" /> -->
<!-- 			</state> -->
				
			
			<!-- ******************** SELECT ROVER ******************** -->			
			<state id="SelectRover">
				<datamodel>
					<data id="invoke"><rosaction><name>cmd/assign_task</name><action>AssignTask</action><goal type="slot"><var>target_id</var><var>pose</var></goal></rosaction>
					</data>
				</datamodel>
				<invoke type="ROS_ACTION" />
				
				<transition event="succeeded" target="Tracking" />
			</state>
			
			<!-- ******************** TRACKING ******************** -->
			<state id="Tracking">
				<datamodel>
					<data id="invoke"><rosaction><name>uav_tracking</name><action>Tracking</action><goal type="slot"><var>target</var><var>cps</var></goal></rosaction>
					</data>
				</datamodel>
				<invoke type="ROS_ACTION" />
				
				<transition event="succeeded" target="IdleThreads" />
				<transition event="aborted" target="IdleThreads" />
			</state>

			<!-- ******************** LOCAL COVERAGE ******************** -->	
<!-- 			<parallel id="LocalCoverageThreads"> -->
			
<!-- 				<state id="LocalCoverage"> -->
<!-- 					<datamodel> -->
<!-- 						<data id="invoke"><rosaction><name>uav_local_coverage</name><action>Empty</action><goal type="empty"></goal></rosaction> -->
<!-- 						</data> -->
<!-- 					</datamodel> -->
<!-- 					<invoke type="ROS_ACTION" /> -->
<!-- 				</state> -->
				
<!-- 				<state id="CoverageEventMonitoring"> -->
<!-- 					<invoke type="ROS_MONITOR" /> -->
<!-- 				</state> -->
				
<!-- 				<transition event="aborted" target="CoverageThreads" /> -->
<!-- 				<transition event="succeeded" target="SelectRover" />				 -->
<!-- 			</parallel> -->
			
		</state>

		<!-- ******************** ABORT EVENT MONITORING ******************** -->
		<state id="AbortEventMonitoring">
			<datamodel>
				<data id="invoke"><rosmonitor><topic>bridge/events/mission_abort</topic><msg>SimpleEvent</msg></rosmonitor>
				</data>
			</datamodel>
			<invoke type="ROS_MONITOR" />
		</state>
		
		<!-- ******************** EMERGENCY EVENT MONITORING ******************** -->
<!-- 		<state id="EmergencyEventMonitoring"> -->
<!-- 			<datamodel> -->
<!-- 				<data id="invoke"><rosmonitor><topic>TO BE DEFINED</topic><msg>Empty</msg></rosmonitor> -->
<!-- 				</data> -->
<!-- 			</datamodel> -->
<!-- 			<invoke type="ROS_MONITOR" /> -->
<!-- 		</state> -->
		
		<!-- ******************** BATTERY EVENT MONITORING ******************** -->
<!-- 		<state id="BatteryEventMonitoring"> -->
<!-- 			<datamodel> -->
<!-- 				<data id="invoke"><rosmonitor><topic>danger/battery</topic><msg>Empty</msg></rosmonitor> -->
<!-- 				</data> -->
<!-- 			</datamodel> -->
<!-- 			<invoke type="ROS_MONITOR" /> -->
<!-- 		</state> -->
		
		<transition event="missionAbort" target="MissionAbort" />
<!-- 		<transition event="emergencyEvent" target="EmergencyRoutine" /> -->

	</parallel>

	<!-- ******************************* MISSION ABORT *************************************** -->
	<state id="MissionAbort">
	
		<state id="Land">
			<datamodel>
				<data id="invoke"><rosservice><name>cmd/land</name><srv>std_srvs.srv.Empty</srv><request empty="true"/></rosservice>
				</data>
			</datamodel>
			<invoke type="ROS_SERVICE" />
		</state>
		
		<transition event="succeeded" target="SarThreads" />
<!-- 		<transition event="preempted" target="preempted" /> -->
<!-- 		<transition event="aborted" target="aborted" /> -->
		
	</state>

	<!-- ********************************* EMERGENCY ROUTINE ********************************** -->
<!-- 	<state id="EmergencyRoutine"> -->
	
<!-- 		<state id="EmergencyLand"> -->
<!-- 			<datamodel> -->
<!-- 				<data id="invoke"><rosservice><name>cmd/land</name><srv>std_srvs.srv.Empty</srv><request empty="true"/></rosservice> -->
<!-- 				</data> -->
<!-- 			</datamodel> -->
<!-- 			<invoke type="ROS_SERVICE" /> -->
<!-- 		</state> -->
		
<!-- 		<transition event="succeeded" target="SarThreads" /> -->
<!-- 		<transition event="preempted" target="preempted" /> -->
<!-- 		<transition event="aborted" target="aborted" /> -->

<!-- 	</state> -->

</scxml>