<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml"
	xmlns:cpswarm="http://my.custom-actions.domain/cpswarm/CUSTOM"
	version="1.0" initial="SarThreads" name="sar">
	
	<!-- ******************** SAR MAIN ******************** -->
	<parallel id="SarThreads">
	
		<!-- ******************** SAR BEHAVIOR ******************** -->
		<state id="SarBehavior">
			
			<!-- ******************** IDLE ******************** -->
			<state id="Idle">
			</state>

			<!-- ****************TAKEOFF ******************** -->			
			<state id="TakeOff">
				<datamodel>
					<data id="invoke"><rosaction><name>cmd/takeoff</name><action>TakeOff</action><goal type="fixed"><param>1.1</param></goal></rosaction>
					</data>
				</datamodel>
				<invoke type="ROS_ACTION" />
				
				<transition event="succeeded" target="Coverage" />
			</state>
			
			<!-- ******************** COVERAGE ******************** -->
			<state id="Coverage">
				<datamodel>
					<data id="invoke"><rosaction><name>uav_coverage</name><action>Coverage</action><goal type="empty"></goal></rosaction>
					</data>
				</datamodel>
				<invoke type="ROS_ACTION" />
				
				<transition event="succeeded" target="SelectRover" />
			</state>
				
			
			<!-- ******************** SELECT ROVER ******************** -->			
			<state id="SelectRover">
				<datamodel>
					<data id="invoke"><rosaction><name>cmd/assign_task</name><action>AssignTask</action><goal type="userdata"><var>target_id</var><var>pose</var></goal></rosaction>
					</data>
				</datamodel>
				<invoke type="ROS_ACTION" />
				
				<transition event="succeeded" target="IdleThreads3" />
				<transition event="aborted" target="SelectRover" />
			</state>
			
			<!-- ******************** IDLE ******************** -->
			<parallel id="IdleThreads3">
				<state id="Idle3">
				</state>
				
				<state id="IdleEventMonitoring3">
					<datamodel>
						<data id="invoke"><rosmonitor><topic>bridge/events/target_rescued</topic><msg>SimpleEvent</msg></rosmonitor>
						</data>
					</datamodel>
					<invoke type="ROS_MONITOR" />
				</state>
				
				<transition event="targetRescued" target="Coverage" />
			</parallel>
				
		</state>

		<!-- ******************** ABORT EVENT MONITORING ******************** -->
		<state id="AbortEventMonitoring">
			<datamodel>
				<data id="invoke"><rosmonitor><topic>bridge/events/mission_abort</topic><msg>SimpleEvent</msg></rosmonitor>
				</data>
			</datamodel>
			<invoke type="ROS_MONITOR" />
		</state>
		
		<transition event="missionAbort" target="MissionAbort" />

	</parallel>

	<!-- ******************************* MISSION ABORT *************************************** -->
	<state id="MissionAbort">
	
		<state id="Land">
			<datamodel>
				<data id="invoke"><rosservice><name>cmd/land</name><srv>std_srvs.srv.Empty</srv><request type="empty"/></rosservice>
				</data>
			</datamodel>
			<invoke type="ROS_SERVICE" />
		</state>
		
		<transition event="succeeded" target="SarThreads" />
	
	</state>

</scxml>